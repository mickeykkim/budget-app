[project]
name = "budget-app"
version = "0.1.0"
description = "A budgeting application that integrates with banking APIs"
authors = [
    { name = "Mickey Kim", email = "mickey.kim@gmail.com" }
]
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.27.0",
    "sqlalchemy>=2.0.25",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9",
    "pydantic[email]>=2.10.3",
    "pydantic-settings>=2.7.0",
    "python-multipart>=0.0.6",
    "boto3>=1.34.15",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.3",
    "email-validator>=2.1.0.post1",
    "bcrypt>=4.2.1",
    "structlog>=24.4.0",
    "sqlalchemy-utils>=0.41.2",
    "pyjwt>=2.10.1",
    "cryptography>=44.0.0",
]
requires-python = ">=3.12"

[dependency-groups]
dev = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.3",
    "black>=23.12.1",
    "isort>=5.13.2",
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "httpx>=0.26.0",
    "pytest-env>=1.1.3",
    "aiohttp>=3.9.1",
    "types-requests>=2.31.0",
    "sqlalchemy-utils>=0.41.1",
    "pytest-mock>=3.12.0",
    "bandit>=1.8.0",
    "pip-audit>=2.7.3",
    "pylint>=3.3.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py312"
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
exclude = [
    ".venv",
    "alembic/",
    "init-db.py"
]

[tool.mypy]
strict = true
plugins = [
    "pydantic.mypy"
]
exclude = [
    "tests/",
    "alembic/",
    "init-db.py"
]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "tests.*",
  "boto3.*",
  "botocore.exceptions.*",
  "jose.*",
  "passlib.context",
  "sqlalchemy_utils.*"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "."
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=app --cov-report=term-missing"
env = [
    "ENVIRONMENT=test",
    "POSTGRES_USER=test_user",
    "POSTGRES_PASSWORD=test_password",
    "POSTGRES_HOST=localhost",
    "POSTGRES_PORT=5432",
    "POSTGRES_DB=test_db",
    "SECRET_KEY=test_secret_key",
    "AWS_ACCESS_KEY_ID=test",
    "AWS_SECRET_ACCESS_KEY=test",
    "AWS_REGION=eu-west-2",
]
asyncio_default_fixture_loop_scope = "function"
