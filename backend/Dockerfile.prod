# Use a multi-stage build for a smaller final image
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder

# Set build-time variables
ARG APP_USER=appuser
ARG APP_GROUP=appgroup
ARG APP_UID=1000
ARG APP_GID=1000

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    PYTHONPATH=/app \
    PATH="/app/bin:$PATH"

# Install security updates and required packages
RUN apt-get update && apt-get upgrade -y \
    && apt-get install -y --no-install-recommends \
        curl \
        tini \
        ca-certificates \
        gpg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -g ${APP_GID} ${APP_GROUP} \
    && useradd -u ${APP_UID} -g ${APP_GROUP} -s /bin/bash -m ${APP_USER}

WORKDIR /app

# Copy dependency files
COPY --chown=${APP_USER}:${APP_GROUP} pyproject.toml uv.lock ./

# Install production dependencies only
RUN uv pip install -r pyproject.toml --system

# Copy application code
COPY --chown=${APP_USER}:${APP_GROUP} . .

# Create log directory and set permissions
RUN mkdir -p /var/log/app \
    && chown -R ${APP_USER}:${APP_GROUP} /var/log/app

# Switch to non-root user
USER ${APP_USER}

# Logging configuration
COPY --chown=${APP_USER}:${APP_GROUP} logging.conf /app/logging.conf

# Add healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Use tini as init process
ENTRYPOINT ["/usr/bin/tini", "--"]

# Command to run the application
CMD ["uvicorn", \
    "app.main:app", \
    "--host", "0.0.0.0", \
    "--port", "8000", \
    "--no-reload", \
    "--workers", "4", \
    "--log-config", "/app/logging.conf", \
    "--proxy-headers", \
    "--forwarded-allow-ips", "*"]