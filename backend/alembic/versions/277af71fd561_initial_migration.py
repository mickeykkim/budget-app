"""Initial migration

Revision ID: 277af71fd561
Revises: 
Create Date: 2024-12-10 18:29:14.083390

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import app
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "277af71fd561"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bank_accounts",
        sa.Column("id", app.models.domain.types.SQLiteUUID(), nullable=False),
        sa.Column("user_id", app.models.domain.types.SQLiteUUID(), nullable=False),
        sa.Column("account_type", sa.String(length=50), nullable=False),
        sa.Column("account_name", sa.String(length=255), nullable=True),
        sa.Column("account_identifier", sa.String(length=255), nullable=True),
        sa.Column("access_token", sa.String(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=True),
        sa.Column("token_expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "transactions",
        sa.Column(
            "bank_account_id", app.models.domain.types.SQLiteUUID(), nullable=False
        ),
    )
    op.add_column(
        "transactions",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.alter_column("transactions", "user_id", existing_type=sa.UUID(), nullable=False)
    op.alter_column(
        "transactions",
        "description",
        existing_type=sa.TEXT(),
        type_=sa.String(length=255),
        existing_nullable=True,
    )
    op.create_foreign_key(
        None, "transactions", "bank_accounts", ["bank_account_id"], ["id"]
    )
    op.drop_column("transactions", "type")
    op.drop_column("transactions", "date")
    op.drop_column("transactions", "category")
    op.add_column("users", sa.Column("hashed_password", sa.String(), nullable=False))
    op.add_column(
        "users",
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.drop_column("users", "password_hash")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password_hash", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
    )
    op.alter_column(
        "users",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.drop_column("users", "updated_at")
    op.drop_column("users", "hashed_password")
    op.add_column(
        "transactions",
        sa.Column(
            "category", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "transactions",
        sa.Column(
            "date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "transactions",
        sa.Column("type", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "transactions", type_="foreignkey")
    op.alter_column(
        "transactions",
        "description",
        existing_type=sa.String(length=255),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column("transactions", "user_id", existing_type=sa.UUID(), nullable=True)
    op.drop_column("transactions", "created_at")
    op.drop_column("transactions", "bank_account_id")
    op.drop_table("bank_accounts")
    # ### end Alembic commands ###
